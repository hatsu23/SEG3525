{"ast":null,"code":"/**\n * Adds a label to the trendline at the calculated angle.\n * @param {CanvasRenderingContext2D} ctx - The canvas rendering context.\n * @param {string} label - The label text to add.\n * @param {number} x1 - The starting x-coordinate of the trendline.\n * @param {number} y1 - The starting y-coordinate of the trendline.\n * @param {number} x2 - The ending x-coordinate of the trendline.\n * @param {number} y2 - The ending y-coordinate of the trendline.\n * @param {number} angle - The angle (in radians) of the trendline.\n * @param {string} labelColor - The color of the label text.\n * @param {string} family - The font family for the label text.\n * @param {number} size - The font size for the label text.\n * @param {number} offset - The offset of the label from the trendline\n */\nexport const addTrendlineLabel = (ctx, label, x1, y1, x2, y2, angle, labelColor, family, size, offset) => {\n  // Set the label font and color\n  ctx.font = `${size}px ${family}`;\n  ctx.fillStyle = labelColor;\n\n  // Label width\n  const labelWidth = ctx.measureText(label).width;\n\n  // Calculate the center of the trendline\n  const labelX = (x1 + x2) / 2;\n  const labelY = (y1 + y2) / 2;\n\n  // Save the current state of the canvas\n  ctx.save();\n\n  // Translate to the label position\n  ctx.translate(labelX, labelY);\n\n  // Rotate the context to align with the trendline\n  ctx.rotate(angle);\n\n  // Adjust for the length of the label and rotation\n  const adjustedX = -labelWidth / 2; // Center the label horizontally\n  const adjustedY = offset; // Adjust Y to compensate for the height\n\n  // Draw the label\n  ctx.fillText(label, adjustedX, adjustedY);\n\n  // Restore the canvas state\n  ctx.restore();\n};","map":{"version":3,"names":["addTrendlineLabel","ctx","label","x1","y1","x2","y2","angle","labelColor","family","size","offset","font","fillStyle","labelWidth","measureText","width","labelX","labelY","save","translate","rotate","adjustedX","adjustedY","fillText","restore"],"sources":["C:/Users/dioma/Downloads/react-playground-project/node_modules/chartjs-plugin-trendline/src/components/label.js"],"sourcesContent":["/**\n * Adds a label to the trendline at the calculated angle.\n * @param {CanvasRenderingContext2D} ctx - The canvas rendering context.\n * @param {string} label - The label text to add.\n * @param {number} x1 - The starting x-coordinate of the trendline.\n * @param {number} y1 - The starting y-coordinate of the trendline.\n * @param {number} x2 - The ending x-coordinate of the trendline.\n * @param {number} y2 - The ending y-coordinate of the trendline.\n * @param {number} angle - The angle (in radians) of the trendline.\n * @param {string} labelColor - The color of the label text.\n * @param {string} family - The font family for the label text.\n * @param {number} size - The font size for the label text.\n * @param {number} offset - The offset of the label from the trendline\n */\nexport const addTrendlineLabel = (\n    ctx,\n    label,\n    x1,\n    y1,\n    x2,\n    y2,\n    angle,\n    labelColor,\n    family,\n    size,\n    offset\n) => {\n    // Set the label font and color\n    ctx.font = `${size}px ${family}`;\n    ctx.fillStyle = labelColor;\n\n    // Label width\n    const labelWidth = ctx.measureText(label).width;\n\n    // Calculate the center of the trendline\n    const labelX = (x1 + x2) / 2;\n    const labelY = (y1 + y2) / 2;\n\n    // Save the current state of the canvas\n    ctx.save();\n\n    // Translate to the label position\n    ctx.translate(labelX, labelY);\n\n    // Rotate the context to align with the trendline\n    ctx.rotate(angle);\n\n    // Adjust for the length of the label and rotation\n    const adjustedX = -labelWidth / 2; // Center the label horizontally\n    const adjustedY = offset; // Adjust Y to compensate for the height\n\n    // Draw the label\n    ctx.fillText(label, adjustedX, adjustedY);\n\n    // Restore the canvas state\n    ctx.restore();\n}; "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,iBAAiB,GAAGA,CAC7BC,GAAG,EACHC,KAAK,EACLC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,EAAE,EACFC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,MAAM,KACL;EACD;EACAV,GAAG,CAACW,IAAI,GAAG,GAAGF,IAAI,MAAMD,MAAM,EAAE;EAChCR,GAAG,CAACY,SAAS,GAAGL,UAAU;;EAE1B;EACA,MAAMM,UAAU,GAAGb,GAAG,CAACc,WAAW,CAACb,KAAK,CAAC,CAACc,KAAK;;EAE/C;EACA,MAAMC,MAAM,GAAG,CAACd,EAAE,GAAGE,EAAE,IAAI,CAAC;EAC5B,MAAMa,MAAM,GAAG,CAACd,EAAE,GAAGE,EAAE,IAAI,CAAC;;EAE5B;EACAL,GAAG,CAACkB,IAAI,CAAC,CAAC;;EAEV;EACAlB,GAAG,CAACmB,SAAS,CAACH,MAAM,EAAEC,MAAM,CAAC;;EAE7B;EACAjB,GAAG,CAACoB,MAAM,CAACd,KAAK,CAAC;;EAEjB;EACA,MAAMe,SAAS,GAAG,CAACR,UAAU,GAAG,CAAC,CAAC,CAAC;EACnC,MAAMS,SAAS,GAAGZ,MAAM,CAAC,CAAC;;EAE1B;EACAV,GAAG,CAACuB,QAAQ,CAACtB,KAAK,EAAEoB,SAAS,EAAEC,SAAS,CAAC;;EAEzC;EACAtB,GAAG,CAACwB,OAAO,CAAC,CAAC;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}